apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: {{ .Release.Namespace }}
data:
  prometheus.yaml: |

    global:
      evaluation_interval: 1m
      scrape_interval: 1m
    rule_files:
    - /etc/prometheus/rules/*.yaml

    scrape_configs:
    - job_name: cadvisor
      honor_timestamps: false
      honor_labels: false
      scheme: https

      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - source_labels: [__meta_kubernetes_node_address_InternalIP]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      - target_label: type
        replacement: seed

      metric_relabel_configs:
      # get system services
      - source_labels: [ id ]
        action: replace
        regex: ^/system\.slice/(.+)\.service$
        target_label: systemd_service_name
        replacement: '${1}'
      - source_labels: [ id ]
        action: replace
        regex: ^/system\.slice/(.+)\.service$
        target_label: container
        replacement: '${1}'
{{ include "prometheus.keep-metrics.metric-relabel-config" .Values.allowedMetrics.cAdvisor | indent 6 }}
      - source_labels:
        - container
        - __name__
        # The system container POD is used for networking
        regex: POD;({{ without .Values.allowedMetrics.cAdvisor "container_network_receive_bytes_total" "container_network_transmit_bytes_total" | join "|" }})
        action: drop
      - source_labels: [ __name__, container, interface, id ]
        regex: container_network.+;;(eth0;/.+|(ens.+|tunl0|eth0);/)|.+;.+;.*;.*
        action: keep
      - source_labels: [ __name__, container, interface ]
        regex: container_network.+;POD;(.{5,}|tun0|en.+)
        action: drop
      - source_labels: [ __name__, id ]
        regex: container_network.+;/
        target_label: host_network
        replacement: "true"
      - source_labels: [ id ]
        regex: (/docker/.*)?/kubelet.slice/kubelet-kubepods.slice/kubelet-kubepods-besteffort.slice/.*/docker/.*/kubelet.slice/kubelet-kubepods.slice/kubelet-kubepods-besteffort.slice/.*
        action: drop
      - regex: ^id$
        action: labeldrop
      # drop terraform pods
      - source_labels: [ pod ]
        regex: ^.+\.tf-pod.+$
        action: drop
{{- if .Values.prometheus.additionalCAdvisorScrapeConfigMetricRelabelConfigs }}
{{ toString .Values.prometheus.additionalCAdvisorScrapeConfigMetricRelabelConfigs | indent 6 }}
{{- end }}

    - job_name: kubelet
      honor_labels: false
      scheme: https

      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - source_labels: [__meta_kubernetes_node_address_InternalIP]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics
      - target_label: type
        replacement: seed

      metric_relabel_configs:
{{ include "prometheus.keep-metrics.metric-relabel-config" .Values.allowedMetrics.kubelet | indent 6 }}

    - job_name: node-exporter
      honor_labels: false
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names: [ kube-system ]
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_service_name
        - __meta_kubernetes_endpoint_port_name
        action: keep
        regex: node-exporter;metrics
      # common metrics
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [ __meta_kubernetes_pod_name ]
        target_label: pod
      - source_labels: [ __meta_kubernetes_pod_node_name ]
        target_label: node
      metric_relabel_configs:
{{ include "prometheus.keep-metrics.metric-relabel-config" .Values.allowedMetrics.nodeExporter | indent 6 }}

{{- if .Values.prometheus.additionalScrapeConfigs }}
{{ toString .Values.prometheus.additionalScrapeConfigs | indent 4 }}
{{- end }}
